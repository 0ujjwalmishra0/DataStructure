import java.util.*;
import java.io.*;
import java.util.concurrent.*;
import java.util.Random;


class InsertionSort { 
    
    /*Function to sort array using insertion sort*/
    void sort(int arr[]) 
    { 
        int n = arr.length; 
        for (int i = 1; i < n; ++i) { 
            int key = arr[i]; 
            int j = i - 1; 
  
            /* Move elements of arr[0..i-1], that are 
               greater than key, to one position ahead 
               of their current position */
            while (j >= 0 && arr[j] > key) { 
                arr[j + 1] = arr[j]; 
                j = j - 1; 
            } 
            arr[j + 1] = key; 
        } 
        
    } 
    
    /* A utility function to print array of size n*/
    static void printArray(int arr[]) 
    { 
        int n = arr.length; 
        for (int i = 0; i < n; ++i) 
            System.out.print(arr[i] + " "); 
  
        System.out.println(); 
    } 
  
    
    public static void main(String args[]) 
    {  int i;
        Scanner sc = new Scanner(System.in);
        System.out.println("enter number of numbers to be sorted:");
        int n = sc.nextInt();
       
        
    
            Scanner np = new Scanner(System.in);
            int []arr=new int[n];

            for(int j=0;j<n;j++)
            {
                arr[j]=np.nextInt();
            }
          
        InsertionSort ob = new InsertionSort(); 
        long starttime=System.nanoTime();
        ob.sort(arr); 
        long endtime=System.nanoTime();
        printArray(arr); 
        long timeelapsed=(endtime-starttime);
        System.out.println(starttime);
        System.out.println(endtime);
        System.out.println(timeelapsed);
    } 
}
